[application]
port = 8080
version = 1.0
env = development
secret_key = secret
jwt_secret_string = jwt_secret
upload_folder = data
# value in seconds
jwt_access_token_validity = 1500000
jwt_refresh_token_validity = 1500000
qr_code_text = Image uploaded to dataUnion.app
debug = true
minimum_file_upload_interval = 15552000

app_name = litterbux

# API KEY label
api_key_label = LITTERBUX_API_KEY

# time interval for litterbux empting onchain claims [0, 23]
reward_claim_hour = 2

# Set this 'yes' for production env and can be 'no' to access apis without signature verification.
jwt_on = yes

# Used for generating avatar for wedatanation
pollinations_jwt_token = <jwt_token_here>

# Seconds - Used by celery beat
ncight_notification_task_interval = 20

# litterbux specific variables
# reward amount for referral
reward_referral = 10

#reward amount for start tutorial
reward_start_tutorial = 10

#reward amount for upload
reward_upload = 1

litterbux_referral_bonus_starting_percent = 10

[logging]
file_name = app.log

# WARNING = 30, INFO = 20, DEBUG = 10
level = 10

[couchdb]
user = user
password = password
db_host = 127.0.0.1:5984
metadata_db = metadata
users_db = users
sessions_db = sessions
static_data_db = static_data_db
taxonomy_db = taxonomy
challenges_db = challenges
permission_db = permissions
rewards_db = rewards
entity_list_db = entity_list
compute_db = compute
incident_db = incident
missions_db = missions
bounty_db = bounty
batch_db = batch
handshake_db = handshake
others_db = other
guild_db = guild_db
apikey_db = apikey_db
product_db = products
qrcode_db = qrcodes
csv_db = csv
report_db = report
material_db = material

[base_dao]
page_size = 100

[metadata]

min_image_width = 600
min_image_height = 400

thumbnail_directory = data/cache/thumbnails
thumbnail_width = 400
thumbnail_height = 400

verification_images_directory = data/cache/verification_images
verification_image_width = 1024

[qrcode]
logo_path = data/images/logo.png

[taxonomy]
image_folder = taxonomy_data/crops
labels_folder = taxonomy_data/labels

[rewards]
network = mumbai
token_contract_address = <token_contract_address>
litterbux_token_address = <litterbux_token_address>
public_address = <public_address>
account_private_key = <account_private_key>
network_url = https://polygon-mumbai.g.alchemy.com/v2/V
filecoin_key = 

[celery]
broker_url = pyamqp://user:user@localhost//
result_backend = rpc://user:user@localhost//

[rabbitmq]
username = user
password = password
host = localhost
port = 5671
certs_directory = <certs directory>

[MONGODB]
HOST = 206.81.26.71
PORT = 27017
DATABASE = crab
USERNAME = user
PASSWORD = password

[ALCHEMY_API_KEY]
eth_mainnet = api-key
polygon = api-key

[ipfs]
endpoint = <ipfs endpoint>
api_key = <ipfs api_key>
api_secret = <ipfs api_secret>

[training]
csv_directory = data/csv